substitutions:
  device_id: test-mmwave-mr24hpc1
  device_name: Test mmWave MR24HPC1
  header_frame: headers/mrx_frame.h
  header_sensor: headers/mr24hpc1.h
  uart_rx_pin: "16"
  uart_tx_pin: "17"

esphome:
  name: ${device_id}
  friendly_name: ${device_name}
  includes:
  - ${header_frame}
  - ${header_sensor}

logger:
  logs:
    sensor: INFO
  
uart:
  id: soft_uart2
  baud_rate:  115200
  rx_pin: ${uart_rx_pin}
  tx_pin: ${uart_tx_pin}

sensor:
  - platform: custom
    lambda: |-
      auto mr24hpc1 = new MR24HPC1(id(soft_uart2)); 
      App.register_component(mr24hpc1);
      return { mr24hpc1->presence_sensor, mr24hpc1->motion_sensor, mr24hpc1->status_sensor, mr24hpc1->scene_sensor, mr24hpc1->sensitivity_sensor, mr24hpc1->unoccupied_time_sensor, mr24hpc1->proximity_sensor, mr24hpc1->body_sensor };
    sensors:
      - id: presence_sensor
        name: Presense Sensor
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: mr24hpc1_presence_template
              state: !lambda return x > 0;
      - id: motion_sensor
        name: Motion Sensor
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: mr24hpc1_motion_template
              state: !lambda return x > 0;
      - id: status_sensor
        name: Status Sensor
        state_class: measurement
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: mr24hpc1_status_template
              state: !lambda return x == 1;
      - id: scene_sensor
        name: Scene Mode Sensor
        state_class: measurement
        internal: true
        on_value:
          then:
            - lambda: |- 
                auto option = id(mr24hpc1_scene_mode).at(x - 1);
                if (option.has_value()) {
                  auto value = option.value();
                  id(mr24hpc1_scene_mode).publish_state(value);
                }
      - id: sensitivity_sensor
        name: Sensitivity Sensor
        state_class: measurement
        internal: true
        on_value:
          then:
            - lambda: |- 
                auto option = id(mr24hpc1_sensitivity).at(x - 1);
                if (option.has_value()) {
                  auto value = option.value();
                  id(mr24hpc1_sensitivity).publish_state(value);
                }
      - id: unoccupied_time_sensor
        name: Time until unoccupied Sensor
        state_class: measurement
        internal: true
        on_value:
          then:
            - lambda: |- 
                auto option = id(mr24hpc1_unoccupied_time).at(x);
                if (option.has_value()) {
                  auto value = option.value();
                  id(mr24hpc1_unoccupied_time).publish_state(value);
                }
      - id: proximity_sensor
        name: Proximity
        state_class: measurement
      - id: body_sensor
        name: Body Movement
        state_class: measurement

binary_sensor:
  - platform: template
    id: mr24hpc1_presence_template
    name: Presence
    device_class: occupancy
  - platform: template
    id: mr24hpc1_motion_template
    name: Motion
    device_class: motion
  - platform: template
    id: mr24hpc1_status_template
    name: Status
    device_class: running

button:
  - platform: template
    id: mr24hpc1_heartbeat_inquiry
    name: Heartbeat Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x01,0x01,0x00,0x01,0x0F,0xBE,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_reset
    name: Module Reset
    icon: mdi:power-cycle
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x01,0x02,0x00,0x01,0x0F,0xBF,0x54,0x43 ]


  - platform: template
    id: mr24hpc1_model_inquiry
    name: Product Model Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x02,0xA1,0x00,0x01,0x0F,0x5f,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_product_id_inquiry
    name: Product Id Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x02,0xA2,0x00,0x01,0x0F,0x60,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_hardware_inquiry
    name: Product Hardware Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x02,0xA3,0x00,0x01,0x0F,0x61,0x54,0x43 ]


  - platform: template
    id: mr24hpc1_firmware_inquiry
    name: Product Firmware Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x02,0xA4,0x00,0x01,0x0F,0x62,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_status_inquiry
    name: Status Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x05,0x81,0x00,0x01,0x0F,0x42,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_scene_mode_inquiry
    name: Scene Mode Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x05,0x87,0x00,0x01,0x0F,0x48,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_sensitivity_inquiry
    name: Sensitivity Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x05,0x88,0x00,0x01,0x0F,0x49,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_presence_inquiry
    name: Presence Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x80,0x81,0x00,0x01,0x0F,0xBD,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_motion_inquiry
    name: Motion Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x80,0x82,0x00,0x01,0x0F,0xBE,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_body_movement_inquiry
    name: Body Movement Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x80,0x83,0x00,0x01,0x0F,0xBF,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_unoccupied_time_inquiry
    name: Time until unoccupied Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x80,0x8A,0x00,0x01,0x0F,0xC6,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_proximity_inquiry
    name: Proximity Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x80,0x8B,0x00,0x01,0x0F,0xC7,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_motion_to_still_inquiry
    name: Motion to Still Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x08,0x8D,0x00,0x01,0x0F,0x51,0x54,0x43 ]

  - platform: template
    id: mr24hpc1_no_person_state_time_inquiry
    name: No Person State Time Inquiry
    icon: mdi:refresh
    on_press:
      then:
        - uart.write: [ 0x53,0x59,0x08,0x8E,0x00,0x01,0x0F,0x52,0x54,0x43 ]

select:
  - platform: template
    id: mr24hpc1_scene_mode
    name: Scene Mode
    icon: mdi:home-map-marker
    options:
      - Living room
      - Bedroom
      - Bathroom
      - Area detection
    initial_option: Living room
    set_action:
      - uart.write: !lambda
                  auto index = id(mr24hpc1_scene_mode).index_of(x);
                  uint8_t value = (uint8_t)index.value() + 1;
                  uint8_t crc = value + 0xB9;
                  return { 0x53,0x59,0x05,0x07,0x00,0x01,value,crc,0x54,0x43 };  

  - platform: template
    id: mr24hpc1_unoccupied_time
    name: Time until unoccupied
    icon: mdi:timeline-clock
    options:
      - None
      - 10s
      - 30s
      - 1min
      - 2min
      - 5min
      - 10min
      - 30min
      - 1hour
    initial_option: 30s
    set_action:
      - uart.write: !lambda
                  auto index = id(mr24hpc1_unoccupied_time).index_of(x);
                  uint8_t value = (uint8_t)index.value();
                  uint8_t crc = value + 0x37;
                  return { 0x53,0x59,0x80,0x0a,0x00,0x01,value,crc,0x54,0x43 };

  - platform: template
    id: mr24hpc1_sensitivity
    name: Sensitivity
    icon: mdi:tune
    options:
      - 2.5m
      - 3m
      - 4m
    initial_option: 4m
    set_action:
      - uart.write: !lambda
                  auto index = id(mr24hpc1_sensitivity).index_of(x);
                  uint8_t value = (uint8_t)index.value() + 1;
                  uint8_t crc = value + 0xBA;
                  return { 0x53,0x59,0x05,0x08,0x00,0x01,value,crc,0x54,0x43 };

  - platform: template
    id: mr24hpc1_open_output
    name: Open Function Output
    icon: mdi:tune
    options:
      - "off"
      - "on"
    initial_option: "off"
    optimistic: true
    set_action:
      - uart.write: !lambda
                  auto index = id(mr24hpc1_open_output).index_of(x);
                  uint8_t value = (uint8_t)index.value();
                  uint8_t crc = value + 0xB5;
                  return { 0x53,0x59,0x08,0x00,0x00,0x01,value,crc,0x54,0x43 };
